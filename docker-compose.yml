version: '3.7'
services:
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "8081:8085"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - laravel

  whoami:
    image: "traefik/whoami"
    container_name: "whoami1"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    networks:
      - laravel

  whoami2:
    image: "traefik/whoami"
    container_name: "whoami2"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    networks:
      - laravel

  whoami3:
    image: "traefik/whoami"
    container_name: "whoami3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    networks:
      - laravel

  whoami4:
    image: "traefik/whoami"
    container_name: "whoami4"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    networks:
      - laravel

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
    depends_on:
      - php
      - mysql
    networks:
      - laravel
    
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: proyecto
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: admin.root
    ports:
      - 3307:3306
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - laravel
  
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    image: php:7.4-fpm-alpine
    volumes:
      - ./src:/var/www/html
    ports:
      - 9000:80
    networks:
      - laravel
  
  mailhog_server:
    image: mailhog/mailhog
    depends_on:
      - php
    container_name: mailhog_server
    #this is optional
    tty: true
    ports:
      - '1025:1025'
      - '8025:8025'
    #this is optional
    #restart: always
    restart: on-failure
    #set the same network as the other services
    networks:
      - laravel

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    environment:
      #MYSQL_USER: homestead
      #MYSQL_PASSWORD: secret
      #MYSQL_ROOT_PASSWORD: admin.root
      - PMA_HOST=mysql
      - PMA_PORT=3306
    networks:
      - laravel
    ports:
      - 8000:80

networks:
  laravel:
